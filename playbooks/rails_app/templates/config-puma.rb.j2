# Change to match your CPU core count
workers 2

# Min and Max threads per worker
threads 1, 6

# Default to production
rails_env = ENV['RAILS_ENV'] || "production"
environment rails_env

# Daemonize the server into the background. Highly suggest that
# this be combined with “pidfile” and “stdout_redirect”.
# The default is “false”.

daemonize true

pidfile "{{ app_directory }}/tmp/pids/puma.pid"
state_path "{{ app_directory }}/tmp/pids/puma.state"


# Bind the server to “url”. “tcp://”, “unix://” and “ssl://” are the only accepted protocols.
# The default is “tcp://0.0.0.0:9292”.
# bind 'tcp://0.0.0.0:9292'
# bind "unix://{{ app_directory }}/tmp/sockets/puma.sock"
# Instead of “bind 'ssl://127.0.0.1:9292?key=path_to_key&cert=path_to_cert'”
# you can also use the “ssl_bind” option.
# ssl_bind '127.0.0.1', '9292', { key: path_to_key, cert: path_to_cert }

bind "unix://{{ app_directory }}/tmp/sockets/puma.sock"

# Logging
stdout_redirect "log/puma.stdout.log", "log/puma.stderr.log", true

activate_control_app

on_worker_boot do
  require "active_record"
  ActiveRecord::Base.connection.disconnect! rescue ActiveRecord::ConnectionNotEstablished
  ActiveRecord::Base.establish_connection(YAML.load_file("{{ app_directory }}/config/database.yml")[rails_env])
end


