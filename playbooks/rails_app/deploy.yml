---
- hosts: railsapp
  become: yes

  vars_files:
    - vars.yml

  roles:
    - geerlingguy.nginx  # to use its handler for restarting nginx

  tasks:
    - name: Ensure demo application is at correct release.
      git:
        repo: https://github.com/antoniovelazquezbarroso/blog.git
        # version: "{{ app_version }}" # To choose version repository to checkout
                                     # (can be a branch name, tag name or SHA-1 hash)
                                     # defaults to the literal string HEAD 
        dest: "{{ app_directory }}"
        accept_hostkey: true
        force: yes
      register: app_updated
      notify: restart nginx

    - name: Ensure secrets file is present.
      template:
        src: templates/secrets.yml.j2
        dest: "{{ app_directory }}/config/secrets.yml"
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: 0664
      notify: restart nginx
      # Fails frequently on Ansible 2.2.0.0 because of git.py module error
      # Just retrying fixes the problem
      # See https://github.com/ansible/ansible-modules-core/issues/5504
      # and https://github.com/ansible/ansible-modules-core/pull/5505

    - name: Ensure puma.rb configuration file is present.
      template:
        src: templates/puma.rb.j2
        dest: "{{ app_directory }}/config/puma.rb"
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: 0664
      notify: restart nginx
      
    - name: Ensure puma pids and socket folders exist and are writeable.
      file:
        path: "{{ app_directory }}/tmp/{{ item }}"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: 0755
      with_items:
        - pids
        - sockets

    - name: Install required dependencies with bundler.
      shell: "bundle install --path vendor/bundle chdir={{ app_directory }}"
      when: app_updated.changed == true
      notify: restart nginx

    - name: Perform deployment-related rake tasks.
      shell: "{{ item }} chdir={{ app_directory }}"
      with_items:
        - bundle exec rake db:migrate
        - bundle exec rake db:seed
        - bundle exec rake assets:precompile
      environment: "{{app_environment}}"
      when: app_updated.changed == true
      notify: restart nginx

    - name: Ensure demo application has correct user for files.
      file:
        path: "{{ app_directory }}"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        recurse: yes
      notify: restart nginx

    - name: Start Puma server.
      shell: "{{ item }} chdir={{ app_directory }}"
      with_items:
        - bundle exec puma -d --bind unix://{{ app_directory }}/tmp/sockets/puma.sock --pidfile {{ app_directory }}/tmp/pids/puma.pid --state {{ app_directory }}/tmp/pids/puma.state
      environment: "{{app_environment}}"
   #   when: app_updated.changed == true
      notify: restart nginx
